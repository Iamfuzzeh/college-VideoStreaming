// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Portal.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package SD2;

public class Endpoint implements java.lang.Cloneable, java.io.Serializable
{
    public String transport;

    public String ip;

    public int port;

    public Endpoint()
    {
    }

    public Endpoint(String transport, String ip, int port)
    {
        this.transport = transport;
        this.ip = ip;
        this.port = port;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        Endpoint _r = null;
        if(rhs instanceof Endpoint)
        {
            _r = (Endpoint)rhs;
        }

        if(_r != null)
        {
            if(transport != _r.transport)
            {
                if(transport == null || _r.transport == null || !transport.equals(_r.transport))
                {
                    return false;
                }
            }
            if(ip != _r.ip)
            {
                if(ip == null || _r.ip == null || !ip.equals(_r.ip))
                {
                    return false;
                }
            }
            if(port != _r.port)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::SD2::Endpoint");
        __h = IceInternal.HashUtil.hashAdd(__h, transport);
        __h = IceInternal.HashUtil.hashAdd(__h, ip);
        __h = IceInternal.HashUtil.hashAdd(__h, port);
        return __h;
    }

    public java.lang.Object
    clone()
    {
        java.lang.Object o = null;
        try
        {
            o = super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return o;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(transport);
        __os.writeString(ip);
        __os.writeInt(port);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        transport = __is.readString();
        ip = __is.readString();
        port = __is.readInt();
    }

    public static final long serialVersionUID = 9159271637256205737L;
}
